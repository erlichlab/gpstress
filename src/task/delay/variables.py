# this file defines all the common variables needed in the whole experiment
from psychopy import sound
#---------------variables/lists-----------------------------------
class Variables:
    def __init__(self):
        self.stg = 'tbd'
        self.secPos = 'tbd'
        self.secPos2 = 'TBD'
        self.expInfo = {'Net ID':''}
        self.expInfo_genpop = {'ID':''}
        self.gray2 = "#808080"
        self.purple = "#800080"
        self.white = "#FFFFFF"
        self.black = "#000000"
        self.cyan = "#00FFFF"
        self.yellow = "#FFFF00"
        self.rew_sound_file = 'coin_echo5.wav'
        #self._elX = [0,0,-120,0,120,-240,-120,120,240]
        #self._elY = [-120, 120,0,0, 0,-120,-120,-120,-120,]
        self.elX = [0,0,0,-120,120,-240,-120,120,240] # [1]-reward, [2,3] - init, rest - symmetric for decisions !!!SWITCHED 2 and 3!!!
        self.elY = [-210, 30,-90,-90, -90,-210,-210,-210,-210,]
        self.clockX = 0
        self.clockY = 240
        self.mag = [1,2,5,8,10]
        self.shortmag = 4
        self.D15Pairs = []
        self.maxRewMag = max(self.mag)
        self.minRewMag = min(self.mag)
        self.highLowRew = [self.maxRewMag,self.minRewMag] # 1 for reward minimum
        self.delay = [1,2,4,8,16]
        self.shortdelay = 0
        self.delaydiscounter = 1
        self.maxDelay = max(self.delay)
        self.minDelay = min(self.delay)
        self.highLowDelay = [self.maxDelay,self.minDelay]
        self.fixmag = [0.5,1,1.5,2,2.5]
        self.refresherColorList = ['y','b']
        self.stage0 = False
        self.state = 'TBD'
        self.dataFile = 'TBD'
        self.rewPosCode = 0 #reward position code, which refers to (0,-120) in matrixXY list
        self.rewPos= 0
        self.initPosCode = 'TBD'
        self.initPos = 'TBD'
        self.bluePosCode = 'TBD'
        self.bluePos = 'TBD'
        self.yellowPosCode = 'TBD'
        self.yellowPos = 'TBD'
        self.choice = '/'
        self.ychoice = '/' #1 if chose yellow, 0 if blue
        self.refresherColor = 'TBD'
        self.pay = None
        self.sameInitPos = False
        self.forcedTrial = False
        self.circle_fullSize = 100
        self.radius = 50
        self.circle_innerSize = 90
        self.nonverbalTotalTrial = 60 # has to be multiple of 4 and 5 (5 rewards)
        self.nonverbalTotalTrial_r = 100 # has to be multiple of 4 and 5
        self.verbalTotalTrial = 50 # changed from 50 (this num * percentage of smaller trials /number of smaller trials) >= 2; in current case has to >= 80
        self.verbalTotalTrial_dw = 50 # 100 for students; 50 for genpop
        self.verbalTotalTrial_Chn = 50 # for genpop 
        self.trial = 1000 # changed from 40, cannot proceed if fail 
        self.forcedTrialNum= 16 # changed from 16
        self.highLowTrialNum = 6 
        self.order_forcedTrialNum = len(self.mag)*2 # var.mag and var.delay have the same length
        self.refresherNum = 20 # changed from 20
        self.blockTrial = 10 # changed from 10
        self.oneRound = 60 # changed from 60
        self.rewdelPair = 60 # force number of pairs
        self.sb = 10
        self.rewIndex = 0
        self.delayIndex = 0
        self.rewWrong = False
        self.initWrong = False
        self.fixWrong = False
        self.blueWrong = False
        self.yellowWrong = False
        self.choiceWrong = False
        self.trialCounter = 0
        self.trialsCorrect = 0
        self.forcedTrialCounter = 0
        self.refresherCounter = 0
        self.blockTrialCounter = 0
        self.totalTrialCounter = 0
        self.mergedTrialCounter = 0
        self.goodPokesInARoll=0
        self.learnedRewPoke = 0
        self.learnedInitPoke = 0
        self.learnedFix = 0
        self.learnedBluePoke = 0
        self.learnedYellowPoke = 0
        self.learnedChoicePoke = 0
        self.pairNum = 0
        self.blockName = 1
        self.rewDelPairList = []
        self.initStimDis = 'TBD'
        self.magScale = 50
        self.rewardGot = 0
        self.fixDur = 2
        self.passThreshold = 4 # changed from 4
        self.SF=41000
        self.hitmag=1
        self.points = 0
        self.rewmag = 1
        self.blockRewMag='/'
        self.delaymag = 0
        self.snddelaymag = 0
        self.pay_delay = None
        self.pay_num = None
        self.rew_sound = sound.Sound(value=self.rew_sound_file)
        self.vioSoundDur = 0.8
        self.hitSoundDur = self.rew_sound.getDuration()
        self.ISRSoundDur = 0.5
        self.DBRSoundDur = 0.48 #changed from 0.5
        self.delaySoundDur = 1
        self.showCoinDur = 0.2
        self.blockBreak = 20
        self.blockBreakCancel = '/'
        self.timeStart1 = '/'
        self.timeStart2 = '/'
        self.timeStart3 = '/'
        self.timeStart4 = '/'
        self.delayStart = '/'
        self.wait_for_reward_poke_time = '/'
        self.wait_for_rewViolation_poke_time = '/'
        self.wait_for_init_poke_time = '/'
        self.wait_for_initViolation_poke_time = '/'
        self.wait_for_fixViolation_poke_time = '/'
        self.wait_for_blue_poke_time = '/'
        self.wait_for_blueViolation_poke_time = '/'
        self.wait_for_yellow_poke_time = '/'
        self.wait_for_yellowViolation_poke_time = '/'
        self.wait_for_choice_poke_time = '/'
        self.wait_for_choiceViolation_poke_time = '/'
        self.fixation_clicks = []
        self.reward_clicks = []
        self.delay_clicks = []
        self.standardRT_get_reward = 5
        self.sessid = 0
        self.longVerbal = False
        self.shortVerbal = False
        self.weekVerbal = False
        # new
        self.wait_for_choice_time = '/'
        self.Rpos = 'tbd'
        self.Lpos = 'tbd'
        # new vars for session data saving.
        self.rate_ans = []
        self.dt_ans = []
        self.chhist_ans = []
        self.quest = 'tbd'
        self.session1 = 0
        self.d = 'tbd'